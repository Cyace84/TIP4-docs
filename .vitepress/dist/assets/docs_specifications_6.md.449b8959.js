import{_ as e,c as t,o as a,V as r}from"./chunks/framework.af8f98c2.js";const m=JSON.parse('{"title":"TIP-6.1 Standard","description":"","frontmatter":{},"headers":[],"relativePath":"docs/specifications/6.md","filePath":"docs/specifications/6.md"}'),n={name:"docs/specifications/6.md"},o=r('<h1 id="tip-6-1-standard" tabindex="-1">TIP-6.1 Standard <a class="header-anchor" href="#tip-6-1-standard" aria-label="Permalink to &quot;TIP-6.1 Standard&quot;">â€‹</a></h1><p>Smart contracts in TVM can implement a wide variety of functionality - wallets, tokens, exchanges and so on. We need a standard way to determine the type of smart contract without relying on knowledge of its internal structure.</p><p>Regarding to that a standard has been developed known as TIP.6, which offers the desired functionality.</p><p>The SID interface is part of the TIP-6.1 standard, as defined in the TVM Network documentation. It defines a smart contract interface that allows other contracts to query if a contract implements a specific interface.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Also refer to the provided links below fot further information.</p><p><a href="https://docs.everscale.network/standard/TIP-6.1" target="_blank" rel="noreferrer">https://docs.everscale.network/standard/TIP-6.1</a></p><p><a href="https://eips.ethereum.org/EIPS/eip-165" target="_blank" rel="noreferrer">https://eips.ethereum.org/EIPS/eip-165</a></p></div>',5),s=[o];function i(c,d,p,l,f,h){return a(),t("div",null,s)}const u=e(n,[["render",i]]);export{m as __pageData,u as default};
