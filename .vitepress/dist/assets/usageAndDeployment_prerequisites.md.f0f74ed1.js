import{_ as s,c as a,o as e,V as n}from"./chunks/framework.af8f98c2.js";const u=JSON.parse('{"title":"Prerequisites","description":"","frontmatter":{},"headers":[],"relativePath":"usageAndDeployment/prerequisites.md","filePath":"src/pages/usageAndDeployment/prerequisites.md"}'),o={name:"usageAndDeployment/prerequisites.md"},l=n(`<h1 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h1><h2 id="packages" tabindex="-1">Packages <a class="header-anchor" href="#packages" aria-label="Permalink to &quot;Packages&quot;">​</a></h2><p>In order to perform the operations mentioned in this documentation using <a href="https://github.com/broxus/everscale-inpage-provider" target="_blank" rel="noreferrer"><code>everscale-inpage-provider</code></a> , the target contracts artifacts, including the contract tvc and code, are required. These artifacts can be obtained using the <code>locklift build</code> command, which generates the necessary files which we can provide them by simply copying and pasting the these required files from the build folder as we generated them earlier in <a href="/src/pages/gettingStarted/lockliftConfigSetting.html#step-3-build-the-artifacts">lockliftConfigSetup</a>.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>in the everscale-inpage-provider code samples provided in next sections, the contract artifacts are imported from build folder, we must make this folder and copy ans paste the the previously mentioned artifacts in this folder.</p></div><p>The necessary npm packages are as follows:</p><ul><li><code>everscale-inpage-provider</code></li><li><code>everscale-standalone-client</code></li></ul><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Here is the propose of using the mentioned packages in our scripts:</p><ul><li><code>everscale-inpage-provider</code> is used to interact with blockchain in Dapps.</li><li><code>everscale-standalone-client</code> Facilitates usage of the Accounts when interacting with them.</li></ul></div><p>To install these packages, run the following command in your shell:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">install</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">--save-dev</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">everscale-inpage-provider</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">everscale-standalone-client</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The following steps are only required when building Dapps and using decentralized wallets. If you are using <strong>locklift</strong> to make transactions, you can skip this step.</p></div><h2 id="provider" tabindex="-1">Provider <a class="header-anchor" href="#provider" aria-label="Permalink to &quot;Provider&quot;">​</a></h2><p>The <code>everscale-inpage-provider</code> is used as a provider for TVM based blockchains such as <a href="https://venom.foundation/" target="_blank" rel="noreferrer">Venom</a> and <a href="https://everscale.network/" target="_blank" rel="noreferrer">Everscale</a>. Follow the steps below to initialize and use <code>everscale-inpage-provider</code> in your scripts.</p><p>You can also refer to the <a href="https://provider-docs.broxus.com/guides/deploy.html#deploy-a-contract" target="_blank" rel="noreferrer">everscale-inpage-provider Docs</a> for detailed instructions.</p><h3 id="step-1-create-the-module" tabindex="-1">Step 1: Create the module <a class="header-anchor" href="#step-1-create-the-module" aria-label="Permalink to &quot;Step 1: Create the module&quot;">​</a></h3><p>Create a file named <code>useProvider.ts</code>.</p><h3 id="step-2-add-scripts" tabindex="-1">Step 2: Add Scripts <a class="header-anchor" href="#step-2-add-scripts" aria-label="Permalink to &quot;Step 2: Add Scripts&quot;">​</a></h3><p>Add the following script to the file you just made:</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">ProviderRpcClient</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Address</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">everscale-inpage-provider</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">useProvider</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">../../src/providers/useProvider</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * Fetches the data about the EVER Wallet</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#89DDFF;font-style:italic;">@</span><span style="color:#C792EA;font-style:italic;">returns</span><span style="color:#676E95;font-style:italic;"> Either the Tvm provider, Tvm wallet address or undefined</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">useProviderInfo</span><span style="color:#89DDFF;">():</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Promise</span><span style="color:#89DDFF;">&lt;</span><span style="color:#BABED8;">[</span><span style="color:#FFCB6B;">ProviderRpcClient</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Address</span><span style="color:#BABED8;">]</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">try</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Initialize the provider</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">provider</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ProviderRpcClient</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">ProviderRpcClient</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Make sure the provider is initialized.</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">provider</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ensureInitialized</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// Request permissions from the user to execute API</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">provider</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">requestPermissions</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      permissions</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">basic</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">accountInteraction</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// setting the ever sender address</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">providerAddress</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Address</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">provider</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getProviderState</span><span style="color:#F07178;">())</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">permissions</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">accountInteraction</span><span style="color:#89DDFF;">!.</span><span style="color:#BABED8;">address</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">provider</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">providerAddress</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">catch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">e</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">any</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">throw</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Error</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">e</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">message</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>From now we can use the provider object and the provider address in our scripts by just simply importing and initiating this function.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can also refer to the Documentation of the everscale-inpage-provider.</p><p><a href="https://provider-docs.broxus.com/" target="_blank" rel="noreferrer">https://provider-docs.broxus.com/</a></p></div>`,20),p=[l];function t(r,c,i,y,F,d){return e(),a("div",null,p)}const h=s(o,[["render",t]]);export{u as __pageData,h as default};
