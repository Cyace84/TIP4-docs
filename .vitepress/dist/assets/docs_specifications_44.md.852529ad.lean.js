import{I as n}from"./chunks/BKDImgContainer.9e999ac6.js";import{d as i,_ as r,J as s,c,N as o,V as d,k as e,a as t,o as l}from"./chunks/framework.ab3d0493.js";const h=i({name:"Diagrams",components:{ImgContainer:n},setup(){return{}}}),N=JSON.parse('{"title":"under development","description":"","frontmatter":{},"headers":[],"relativePath":"docs/specifications/44.md","filePath":"docs/specifications/44.md"}'),u=d('<h1 id="under-development" tabindex="-1">under development <a class="header-anchor" href="#under-development" aria-label="Permalink to &quot;under development&quot;">​</a></h1><h1 id="tip-4-4-non-fungible-token-on-chain-storage" tabindex="-1">TIP-4_4 (Non-Fungible Token On-chain storage) <a class="header-anchor" href="#tip-4-4-non-fungible-token-on-chain-storage" aria-label="Permalink to &quot;TIP-4_4 (Non-Fungible Token On-chain storage)&quot;">​</a></h1><p>Requires: <a href="./41.html">TIP-4.1</a> Requires: <a href="./6.html">TIP-6.1</a></p><h2 id="abstract" tabindex="-1">Abstract <a class="header-anchor" href="#abstract" aria-label="Permalink to &quot;Abstract&quot;">​</a></h2><p>Using the Storage contract, you can store NFT-related bytes in blockchain. As an use case we can point to off-chain storage of digital assets that each nft might represent such music, videos and images among other digital assets can now be saved on the blockchain.</p><h2 id="motivation" tabindex="-1">Motivation <a class="header-anchor" href="#motivation" aria-label="Permalink to &quot;Motivation&quot;">​</a></h2><p>Fault tolerance. If off-chain services are unavailable, the user will view NFT-related bytes, because it is stored on-chain.</p><h2 id="contract-specification" tabindex="-1">Contract Specification <a class="header-anchor" href="#contract-specification" aria-label="Permalink to &quot;Contract Specification&quot;">​</a></h2><ul><li><code>TIP4_4Collection</code></li><li><code>TIP4_4Nft</code></li><li><code>Storage</code></li></ul><h3 id="tip4-4collection" tabindex="-1">TIP4_4Collection <a class="header-anchor" href="#tip4-4collection" aria-label="Permalink to &quot;TIP4_4Collection&quot;">​</a></h3><p>The collection of this part of the standard will store the storage code and coed hash and helps us to retrieve the the address of a storage contract based on its relevant contract besides the previously described functionalities for collection contract.</p><h3 id="tip4-4nft" tabindex="-1">TIP4_4Nft <a class="header-anchor" href="#tip4-4nft" aria-label="Permalink to &quot;TIP4_4Nft&quot;">​</a></h3><p>The only change that <code>TIP4_4Nft</code> has than other nft contracts from previous parts is it deploys the storage contract and stores its address.</p><h3 id="storage" tabindex="-1">Storage <a class="header-anchor" href="#storage" aria-label="Permalink to &quot;Storage&quot;">​</a></h3><p>contract that store token byte content. Storage is independent. Storage doesn’t store <code>NFT</code> address because <code>NFT</code> contract address can be changed by burning and redeployment from another collection.</p><ul><li><code>nft</code> (<code>address</code>) - token contract address</li><li><code>collection</code> (<code>address</code>) - collection token contract address</li><li><code>mimeType</code> (<code>string</code>) - <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types" target="_blank" rel="noreferrer">MIME types</a> are defined and standardized in IETF&#39;s <a href="https://datatracker.ietf.org/doc/html/rfc6838" target="_blank" rel="noreferrer">RFC 6838</a><code>content</code> (<code>mapping(uint32 =&gt; bytes)</code>) - byte content. Maximum content size is <code>2 147 483 647 chunks * chunk size</code>. Max size of data is limited by external message payload size. Maximum size external message payload size is <code>16KB</code> at 2022-03-18 Maximum content size is <code>2 147 483 647 * 16KB = 34TB</code> at 2022-03-18. <code>contentEncoding</code> (<code>string</code>) - Was it compressed by any algorithm. If it was compressed with <a href="https://github.com/tonlabs/ever-sdk/blob/master/docs/reference/types-and-methods/mod_utils.md#compress_zstd" target="_blank" rel="noreferrer">zstd</a> contentEncoding need to be <code>zstd</code>, all other need to be like <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding" target="_blank" rel="noreferrer">http content encoding</a></li></ul><h2 id="visualization" tabindex="-1">Visualization <a class="header-anchor" href="#visualization" aria-label="Permalink to &quot;Visualization&quot;">​</a></h2><h3 id="legend" tabindex="-1">Legend <a class="header-anchor" href="#legend" aria-label="Permalink to &quot;Legend&quot;">​</a></h3><br>',19),g=e("br",null,null,-1),p=e("h3",{id:"nft-minting-with-storage",tabindex:"-1"},[e("code",null,"NFT"),t(" minting with "),e("code",null,"Storage"),t(),e("a",{class:"header-anchor",href:"#nft-minting-with-storage","aria-label":'Permalink to "`NFT` minting with `Storage`"'},"​")],-1),m=e("br",null,null,-1),f=e("h3",{id:"storage-filling",tabindex:"-1"},[e("code",null,"Storage"),t(" filling "),e("a",{class:"header-anchor",href:"#storage-filling","aria-label":'Permalink to "`Storage` filling"'},"​")],-1),b=e("br",null,null,-1),_=e("h3",{id:"storage-with-index",tabindex:"-1"},[e("code",null,"Storage"),t(" with "),e("code",null,"Index"),t(),e("a",{class:"header-anchor",href:"#storage-with-index","aria-label":'Permalink to "`Storage` with `Index`"'},"​")],-1),T=e("p",null,[t("How to interaction "),e("a",{href:"./43.html"},"on-chain indexes"),t(" and "),e("code",null,"Storage"),t(" contracts")],-1),k=e("br",null,null,-1);function x(v,P,y,q,I,w){const a=s("ImgContainer");return l(),c("div",null,[u,o(a,{src:"/img/legend1.svg",width:"70%",altText:"deployAccountOutput"}),g,o(a,{src:"/img/legend2.svg",width:"70%",altText:"deployAccountOutput"}),p,m,o(a,{src:"/img/storage1.svg",width:"70%",altText:"deployAccountOutput"}),f,b,o(a,{src:"/img/storage2.svg",width:"70%",altText:"deployAccountOutput"}),_,T,k,o(a,{src:"/img/storage3.svg",width:"70%",altText:"deployAccountOutput"})])}const z=r(h,[["render",x]]);export{N as __pageData,z as default};
