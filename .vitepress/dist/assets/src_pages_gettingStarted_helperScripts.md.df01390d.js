import{_ as s,c as a,o,V as n}from"./chunks/framework.af8f98c2.js";const u=JSON.parse('{"title":"Local Environment","description":"","frontmatter":{},"headers":[],"relativePath":"src/pages/gettingStarted/helperScripts.md","filePath":"src/pages/gettingStarted/helperScripts.md"}'),e={name:"src/pages/gettingStarted/helperScripts.md"},l=n(`<h1 id="local-environment" tabindex="-1">Local Environment <a class="header-anchor" href="#local-environment" aria-label="Permalink to &quot;Local Environment&quot;">â€‹</a></h1><p>The locklift tool has its own local node to make transaction locally.</p><p>But if you want to play around with the local node the front end we will be needing a sandbox as explained below.</p><p>Add this scripts to your <code>package.json</code> scripts sections.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx locklift test --network local</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">start-sandbox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">docker run -d -e USER_AGREEMENT=yes --rm --name local-node -p80:80 tonlabs/local-node:0.29.1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">stop-sandbox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">docker kill local-node</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">reload-sandbox</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">npx stop-sandbox &amp;&amp; npx start-sandbox</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">,</span></span></code></pre></div><p>After adding them execute the necessary command based on your specific requirement.</p>`,6),t=[l];function p(c,r,D,i,y,F){return o(),a("div",null,t)}const E=s(e,[["render",p]]);export{u as __pageData,E as default};
