import{I as t}from"./chunks/BKDImgContainer.cbc55db5.js";import{d as s,_ as l,J as c,c as r,N as o,V as i,k as e,a,o as d}from"./chunks/framework.af8f98c2.js";const p=s({name:"Diagrams",components:{ImgContainer:t},setup(){return{}}}),k=JSON.parse('{"title":"TIP-4_3 ( Non-Fungible Token on-chain indexes)","description":"","frontmatter":{},"headers":[],"relativePath":"specification/tip4_3.md","filePath":"src/pages/specification/tip4_3.md"}'),h=i(`<h1 id="tip-4-3-non-fungible-token-on-chain-indexes" tabindex="-1">TIP-4_3 ( Non-Fungible Token on-chain indexes) <a class="header-anchor" href="#tip-4-3-non-fungible-token-on-chain-indexes" aria-label="Permalink to &quot;TIP-4_3 ( Non-Fungible Token on-chain indexes)&quot;">​</a></h1><p>Requires: <a href="./tip4_1.html">TIP-4.1</a><br> Requires: <a href="./tip6.html">TIP-6.1</a></p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>Using the <code>Index</code> contract code hash, you can find all your NFTs with one simple dApp query to the desired network graphql endpoint. This makes blockchain application less dependent on different off-chain parsers and indexers</p><p>On-chain Indexes solves easy and fast searching any data in blockchain. This document shows standard for basic query. Any developer can get an idea of this solution and realize his own on-chain index.</p><h2 id="motivation" tabindex="-1">Motivation <a class="header-anchor" href="#motivation" aria-label="Permalink to &quot;Motivation&quot;">​</a></h2><p>A standard interface allows search all Collections and all NFT by owner address using the base dApp functionality.</p><h2 id="contract-specification" tabindex="-1">Contract Specification <a class="header-anchor" href="#contract-specification" aria-label="Permalink to &quot;Contract Specification&quot;">​</a></h2><p>The third part of the standard contains following contracts to perform the the on-chain indexing:</p><ul><li><a href="https://github.com/broxus/tip4/tree/master/contracts/TIP4_3/TIP4_3Collection.tsol" target="_blank" rel="noreferrer"><code>TIP-4_3Collection</code></a></li><li><a href="https://github.com/broxus/tip4/tree/master/contracts/TIP4_3/TIP4_3NFT.tsol" target="_blank" rel="noreferrer"><code>TIP-4_3NFT</code></a></li><li><a href="https://github.com/broxus/tip4/tree/master/contracts/TIP4_3/IndexBasis.tsol" target="_blank" rel="noreferrer"><code>IndexBasis</code></a></li><li><a href="https://github.com/broxus/tip4/tree/master/contracts/TIP4_3/Index.tsol" target="_blank" rel="noreferrer"><code>Index</code></a></li></ul><h3 id="tip-4-3collection" tabindex="-1">TIP-4_3Collection <a class="header-anchor" href="#tip-4-3collection" aria-label="Permalink to &quot;TIP-4_3Collection&quot;">​</a></h3><p>Beside the previously described functionalities of the TIP-4Collection contract, This contract will handle the storing the <code>Index</code> and <code>indexBasis</code> contracts basic information such as code and code hash and building their initial data required for deployment although, it will not handle deploying them both, it only handles the process of deploying and destructing the <code>indexBasis</code> contract.</p><h3 id="tip4-3nft" tabindex="-1">TIP4_3NFT <a class="header-anchor" href="#tip4-3nft" aria-label="Permalink to &quot;TIP4_3NFT&quot;">​</a></h3><p>TIP-4_3NFT contract is also containing the added functionalities to the <code>TIP-4_3Collection</code> but also handles the deploying, fetching and deleting the <code>Index</code> contract.</p><h3 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h3><p>The <code>Index</code> contracts are deployed by the NFT contract, with two <code>Index</code> contracts deployed per each NFT contract. Each <code>Index</code> contract will have a specific code hash based on its associated collection and owner.</p><p>The <code>Index</code> contracts code hashes are generated from its salted code with the following salting params:</p><ul><li>The word &quot;nft&quot;</li><li>The owner address of the nft</li><li>The collection address associated with the nft contract</li></ul><p>In one of the <code>Index</code> contracts, the <code>zero address</code> is passed as the collection address, while the other one utilizes the actual <code>collection address</code>.</p><p>Utilizing one of the <code>Index</code> contracts code hash we are able to find all of the nft by the owner and we can find only the nfts associated with a specific collection when using the other one.</p><h3 id="indexbasis" tabindex="-1">IndexBasis <a class="header-anchor" href="#indexbasis" aria-label="Permalink to &quot;IndexBasis&quot;">​</a></h3><p>contract, that helps to find all collections by the <strong>code hash</strong> of which. The index basis contract also has a specific code hash based on the word <code>&quot;nft&quot;</code>, using this unique property we will be able to find all of the nft collection contracts.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><ul><li><p><strong>Code</strong> of <code>IndexBasis</code> and <code>Index</code> contracts and <strong>code hash</strong> of contracts is fixed and <strong>CANNOT BE CHANGED</strong> before deployment. after they are deployed, their code hashes can be changed based on the mentioned salting parameters.</p></li><li><p><strong>Code hash</strong> of <code>IndexBasis</code> compiled by <a href="https://github.com/tonlabs/TON-Solidity-Compiler/tree/a222452e27aacff14fdf2fff356542843a2a8d1c" target="_blank" rel="noreferrer">TVMCompiler</a> <code>v0.58.2</code> and <a href="https://github.com/tonlabs/TVM-linker/tree/740f9f62a4e68c9f515667c109b116f265942d72" target="_blank" rel="noreferrer">TVM-linker</a> <code>v0.14.51</code> without salting is <code>2359f897c9527073b1c95140c670089aa5ab825f5fd1bd453db803fbab47def2</code></p></li><li><p><strong>Code hash</strong> of <code>Index</code> compiled by <a href="https://github.com/tonlabs/TON-Solidity-Compiler/tree/a222452e27aacff14fdf2fff356542843a2a8d1c" target="_blank" rel="noreferrer">TVMCompiler</a> <code>v0.58.2</code> and <a href="https://github.com/tonlabs/TVM-linker/tree/740f9f62a4e68c9f515667c109b116f265942d72" target="_blank" rel="noreferrer">TVM-linker</a> <code>v0.14.51</code> without salting is <code>61e5f39a693dc133ea8faf3e80fac069250161b0bced3790c20ae234ce6fd866</code></p></li></ul></div><h2 id="salting" tabindex="-1">Salting <a class="header-anchor" href="#salting" aria-label="Permalink to &quot;Salting&quot;">​</a></h2><p>The <code>salting</code> operation is when we grab some special and unique value that we desire and integrate them into the current contract code to build a new code for a contract.</p><p>The workflow is followed by the steps below:</p><ol><li><p>storing the slat values into a <a href="https://github.com/tonlabs/TON-Solidity-Compiler/blob/master/API.md#tvmbuilder" target="_blank" rel="noreferrer">TvmBuilder</a> type variable using <a href="https://github.com/tonlabs/TON-Solidity-Compiler/blob/master/API.md#tvmbuilderstore" target="_blank" rel="noreferrer">TvmBuilder.store()</a> instruction.</p></li><li><p>building the new code for the contract using the old contract code and the salted values stored in the TvmBuilder using <a href="https://github.com/tonlabs/TON-Solidity-Compiler/blob/master/API.md#tvmsetcodesalt" target="_blank" rel="noreferrer">tvm.setCodeSalt()</a> instruction.</p></li></ol><p>We can generate the new and specific code hash for the newly built code and use that to query the blockchain data using off-chain tools like <a href="https://docs.locklift.io/" target="_blank" rel="noreferrer">locklift</a> or <a href="https://provider-docs.broxus.com/" target="_blank" rel="noreferrer">everscale-inpage-provider</a>.</p><h2 id="query-example" tabindex="-1">Query Example <a class="header-anchor" href="#query-example" aria-label="Permalink to &quot;Query Example&quot;">​</a></h2><div class="language-graphql"><button title="Copy Code" class="copy"></button><span class="lang">graphql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">query</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  accounts(</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#BABED8;font-style:italic;">filter</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> {</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#C3E88D;">code_hash</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> {</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#C3E88D;">eq</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">207dc560c5956de1a2c1479356f8f3ee70a59767db2bf4788b1d61ad42cdad82</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">      }</span></span>
<span class="line"><span style="color:#BABED8;">    }</span></span>
<span class="line"><span style="color:#BABED8;">  )</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    id</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Part of response example</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">data</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">accounts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0:000001b0422f6a7069786fa9a27aa7bb8042f58e1df01dfebc51dcb2baa5eeae</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">id</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0:00022772794253c1bf8cb4fa59d6161d574033c13d881f3eea14675b911e61b0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="visualization" tabindex="-1">Visualization <a class="header-anchor" href="#visualization" aria-label="Permalink to &quot;Visualization&quot;">​</a></h2><h3 id="legend" tabindex="-1">Legend <a class="header-anchor" href="#legend" aria-label="Permalink to &quot;Legend&quot;">​</a></h3><br>`,35),u=e("h3",{id:"indexbasis-deployment-for-collection",tabindex:"-1"},[e("code",null,"IndexBasis"),a(" deployment for "),e("code",null,"Collection"),a(),e("a",{class:"header-anchor",href:"#indexbasis-deployment-for-collection","aria-label":'Permalink to "`IndexBasis` deployment for `Collection`"'},"​")],-1),f=e("br",null,null,-1),b=e("h3",{id:"index-contracts-deployment-for-nft",tabindex:"-1"},[e("code",null,"Index"),a(" contracts deployment for "),e("code",null,"NFT"),a(),e("a",{class:"header-anchor",href:"#index-contracts-deployment-for-nft","aria-label":'Permalink to "`Index` contracts deployment for `NFT`"'},"​")],-1),y=e("br",null,null,-1),g=e("h3",{id:"redeploy-index-contracts-after-changeowner",tabindex:"-1"},[a("Redeploy "),e("code",null,"Index"),a(" contracts after "),e("code",null,"changeOwner"),a(),e("a",{class:"header-anchor",href:"#redeploy-index-contracts-after-changeowner","aria-label":'Permalink to "Redeploy `Index` contracts after `changeOwner`"'},"​")],-1),m=e("br",null,null,-1);function D(B,F,x,T,_,q){const n=c("ImgContainer");return d(),r("div",null,[h,o(n,{src:"/img/legend1.svg",width:"100%",altText:"deployAccountOutput"}),u,f,o(n,{src:"/img/index1.svg",width:"100%",altText:"deployAccountOutput"}),b,y,o(n,{src:"/img/index2.svg",width:"100%",altText:"deployAccountOutput"}),g,m,o(n,{src:"/img/index3.svg",width:"100%",altText:"deployAccountOutput"})])}const v=l(p,[["render",D]]);export{k as __pageData,v as default};
