import{I as n}from"./chunks/BKDImgContainer.cbc55db5.js";import{d as a,_ as l,J as o,c as p,N as e,V as t,o as c}from"./chunks/framework.af8f98c2.js";const r=a({name:"Diagrams",components:{ImgContainer:n},setup(){return{}}}),h=JSON.parse('{"title":"Deploy Account","description":"","frontmatter":{},"headers":[],"relativePath":"gettingStarted/deployAccount.md","filePath":"src/pages/gettingStarted/deployAccount.md"}'),y=t(`<h1 id="deploy-account" tabindex="-1">Deploy Account <a class="header-anchor" href="#deploy-account" aria-label="Permalink to &quot;Deploy Account&quot;">​</a></h1><p>In this section we will learn how to deploy an Account smart contract and use it in our scripts to send transactions.</p><h2 id="step-1-write-a-deployment-script" tabindex="-1">Step 1: Write a Deployment Script <a class="header-anchor" href="#step-1-write-a-deployment-script" aria-label="Permalink to &quot;Step 1: Write a Deployment Script&quot;">​</a></h2><p>Let&#39;s write a simple script in typescript that will use locklift to deploy our Account. </p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Before we start to write our scripts we need to make sure that there is a file named <code>00-deploy-account.ts</code> in the <code>script</code> folder in the project root.</p></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  locklift is a globally declared variable</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Signer</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">WalletTypes</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Address</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">locklift</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">async</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// each mnemonic can generate more that just one key pair, so we specify which pair do we want.</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">keyNumber</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">balance</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">30</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">/* We get a pair of private and public keys,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      which we get from the mnemonic from the config</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    SimpleSigner {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      keyPair: {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        secretKey: &#39;bb2903d025a330681e78f3bcb248d7d89b861f3e8a480eb74438ec0299319f7a&#39;,</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">        publicKey: &#39;e85f61aaef0ea43afc14e08e6bd46c3b996974c495a881baccc58760f6349300&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      publicKey: &#39;e85f61aaef0ea43afc14e08e6bd46c3b996974c495a881baccc58760f6349300&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    }</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  */</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">signer</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Signer</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">locklift</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">keystore</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getSigner</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">keyNumber</span><span style="color:#F07178;">))</span><span style="color:#89DDFF;">!;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Deploying the account contract</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">contract</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">account</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">locklift</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">factory</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">deployContract</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    contract</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Account</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    publicKey</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">signer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">publicKey</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    constructorParams</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#F07178;">    initParams</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> _randomNonce</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">locklift</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getRandomNonce</span><span style="color:#F07178;">() </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    value</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">locklift</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">utils</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toNano</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">balance</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// Adding it to the AccountStorage to be recognized as a sender to be able to send transaction from it</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">loadedAccount</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">locklift</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">factory</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">accounts</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addExistingAccount</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">WalletTypes</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">MsigAccount</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    address</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">account</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">address</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    mSigType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">SafeMultisig</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">Account deployed at: </span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">loadedAccount</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">address</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toString</span><span style="color:#BABED8;">()</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">main</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exit</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">0</span><span style="color:#BABED8;">))</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">catch</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">e</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">e</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">process</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">exit</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>Giver - is a contract that has a <code>sendTransaction</code> method.<br> The local-node already has a pre-installed contract with the initial amount of EVERs. For other networks, you can configure your giver in <code>locklift.config.ts</code></p></li><li><p>If you need a permanent address for testing, then set the <code>_randomNonce</code> constant. By changing <code>_randomNonce</code> you change the byte code of the contract, and the final address.</p></li><li><p>Kindly Navigate to the Deployment section to see the example of using the Account contract to send transaction from.</p></li></ul></div><h2 id="step-2-deploy-the-account" tabindex="-1">Step 2: Deploy the Account <a class="header-anchor" href="#step-2-deploy-the-account" aria-label="Permalink to &quot;Step 2: Deploy the Account&quot;">​</a></h2><p>Use this command and deploy account:</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npx</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">locklift</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">run</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-s</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">./scripts/00-deploy-account.ts</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">-n</span><span style="color:#BABED8;"> </span><span style="color:#C3E88D;">local</span></span></code></pre></div>`,10);function F(i,D,B,d,A,E){const s=o("ImgContainer");return c(),p("div",null,[y,e(s,{src:"/deployAccOutput.png",width:"100%",altText:"deployAccountOutput"})])}const m=l(r,[["render",F]]);export{h as __pageData,m as default};
