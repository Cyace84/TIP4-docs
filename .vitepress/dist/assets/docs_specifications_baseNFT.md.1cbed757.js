import{_ as e,c as t,o,V as a}from"./chunks/framework.af8f98c2.js";const m=JSON.parse('{"title":"Base NFT","description":"","frontmatter":{},"headers":[],"relativePath":"docs/specifications/baseNFT.md","filePath":"docs/specifications/baseNFT.md"}'),r={name:"docs/specifications/baseNFT.md"},i=a('<h1 id="base-nft" tabindex="-1">Base NFT <a class="header-anchor" href="#base-nft" aria-label="Permalink to &quot;Base NFT&quot;">â€‹</a></h1><p>As explained earlier, a NFT contract is written to handle the logic of the TIP-4_nNFT contracts. Unlike the collection contract, the NFT contract does not require any additional functionality implementation. It simply feeds the constructor of the desired TIP-4_nNFT contract.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>For further reference on the implementation of the contracts, you can explore the <a href="https://github.com/itgoldio/everscale-tip" target="_blank" rel="noreferrer">itgoldio</a> repository to see how they are implemented. Please refer to the &quot;How to Use Library&quot; section for more detailed instructions. You can find it at <a href="https://github.com/itgoldio/everscale-tip#how-to-use-library" target="_blank" rel="noreferrer"> how to use library </a>.</p></div>',3),s=[i];function c(n,l,d,h,p,_){return o(),t("div",null,s)}const u=e(r,[["render",c]]);export{m as __pageData,u as default};
